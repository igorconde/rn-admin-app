{"ast":null,"code":"import React from \"react\";\nimport { HStack, Icon, VStack, Stack, Tooltip, Text, Box, Badge, Card } from \"native-base\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ThirdFold(props) {\n  var cardData = [{\n    percentage: 11,\n    profit: true,\n    amount: \"$1,247.80\",\n    label: \"Total sent\",\n    tooltipLabel: \"Total money sent this week\"\n  }, {\n    percentage: 5,\n    profit: true,\n    amount: \"$540.44\",\n    label: \"Total received\",\n    tooltipLabel: \"Total money received this week\"\n  }, {\n    percentage: 8,\n    profit: false,\n    amount: \"$300.00\",\n    label: \"Outstanding\",\n    tooltipLabel: \"Total money sent this week\"\n  }];\n  return _jsx(Box, {\n    children: _jsx(Stack, {\n      direction: {\n        base: \"column\",\n        md: \"row\"\n      },\n      justifyContent: {\n        base: \"center\",\n        md: \"flex-start\"\n      },\n      alignItems: {\n        base: \"center\",\n        md: \"flex-start\"\n      },\n      space: \"3\",\n      children: cardData.map(function (data, index) {\n        return _jsx(Tooltip, {\n          label: data.tooltipLabel,\n          openDelay: 500,\n          placement: \"top\",\n          children: _jsx(Card, {\n            flex: {\n              base: \"1\",\n              lg: \"-1\"\n            },\n            borderRadius: 12,\n            overflow: \"hidden\",\n            p: 5,\n            w: {\n              base: \"100%\",\n              lg: \"56\"\n            },\n            shadow: \"none\",\n            borderWidth: \"1\",\n            borderColor: \"coolGray.200\",\n            bg: \"warmGray.50\",\n            children: _jsxs(VStack, {\n              space: 2,\n              children: [_jsxs(HStack, {\n                space: 2,\n                alignItems: \"center\",\n                children: [_jsx(Badge, {\n                  borderColor: data.profit ? \"success.500\" : \"danger.500\",\n                  boxSize: \"5\",\n                  rounded: \"full\",\n                  bg: data.profit ? \"success.100\" : \"danger.100\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  children: _jsx(Icon, {\n                    as: Ionicons,\n                    name: data.profit ? \"arrow-up\" : \"arrow-down\",\n                    size: 3,\n                    color: data.profit ? \"success.500\" : \"danger.500\"\n                  })\n                }), _jsxs(Text, {\n                  color: data.profit ? \"success.500\" : \"danger.500\",\n                  children: [data.percentage, \"%\"]\n                })]\n              }), _jsx(Text, {\n                fontWeight: \"bold\",\n                fontSize: \"lg\",\n                children: data.amount\n              }), _jsx(Text, {\n                children: data.label\n              })]\n            })\n          })\n        }, index);\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","HStack","Icon","VStack","Stack","Tooltip","Text","Box","Badge","Card","Ionicons","jsx","_jsx","jsxs","_jsxs","ThirdFold","props","cardData","percentage","profit","amount","label","tooltipLabel","children","direction","base","md","justifyContent","alignItems","space","map","data","index","openDelay","placement","flex","lg","borderRadius","overflow","p","w","shadow","borderWidth","borderColor","bg","boxSize","rounded","as","name","size","color","fontWeight","fontSize"],"sources":["/home/igor/nativebase-v3-examples/example-apps/responsive-dashboard/src/components/Folds/ThirdFold/index.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  HStack,\n  Icon,\n  VStack,\n  Stack,\n  Tooltip,\n  Text,\n  Box,\n  Badge,\n  Card,\n} from \"native-base\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport function ThirdFold(props: any) {\n  const cardData = [\n    {\n      percentage: 11,\n      profit: true,\n      amount: \"$1,247.80\",\n      label: \"Total sent\",\n      tooltipLabel: \"Total money sent this week\",\n    },\n    {\n      percentage: 5,\n      profit: true,\n      amount: \"$540.44\",\n      label: \"Total received\",\n      tooltipLabel: \"Total money received this week\",\n    },\n    {\n      percentage: 8,\n      profit: false,\n      amount: \"$300.00\",\n      label: \"Outstanding\",\n      tooltipLabel: \"Total money sent this week\",\n    },\n  ];\n  return (\n    <Box>\n      <Stack\n        direction={{ base: \"column\", md: \"row\" }}\n        justifyContent={{ base: \"center\", md: \"flex-start\" }}\n        alignItems={{ base: \"center\", md: \"flex-start\" }}\n        space=\"3\"\n      >\n        {cardData.map((data: any, index: number) => {\n          return (\n            <Tooltip key={index} label={data.tooltipLabel} openDelay={500} placement=\"top\">\n              <Card\n                flex={{ base: \"1\", lg: \"-1\" }}\n                borderRadius={12}\n                overflow=\"hidden\"\n                p={5}\n                w={{ base: \"100%\", lg: \"56\" }}\n                shadow=\"none\"\n                borderWidth=\"1\"\n                borderColor=\"coolGray.200\"\n                bg=\"warmGray.50\"\n              >\n                <VStack space={2}>\n                  <HStack space={2} alignItems=\"center\">\n                    <Badge\n                      borderColor={data.profit ? \"success.500\" : \"danger.500\"}\n                      boxSize=\"5\"\n                      rounded=\"full\"\n                      bg={data.profit ? \"success.100\" : \"danger.100\"}\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <Icon\n                        as={Ionicons}\n                        name={data.profit ? \"arrow-up\" : \"arrow-down\"}\n                        size={3}\n                        color={data.profit ? \"success.500\" : \"danger.500\"}\n                      />\n                    </Badge>\n                    <Text color={data.profit ? \"success.500\" : \"danger.500\"}>\n                      {data.percentage}%\n                    </Text>\n                  </HStack>\n                  <Text fontWeight=\"bold\" fontSize=\"lg\">\n                    {data.amount}\n                  </Text>\n                  <Text>{data.label}</Text>\n                </VStack>\n              </Card>\n            </Tooltip>\n          );\n        })}\n      </Stack>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}